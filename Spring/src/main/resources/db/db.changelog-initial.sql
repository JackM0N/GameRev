--liquibase formatted sql

--changeset Stanislaw|Przemyslaw:1 labels:init,tables
CREATE TABLE website_user
(
    user_id          BIGINT PRIMARY KEY,
    username         VARCHAR(255) NOT NULL,
    password         VARCHAR(255) NOT NULL,
    profilepic       VARCHAR(255),
    nickname         VARCHAR(255) NOT NULL,
    email            VARCHAR(255) NOT NULL,
    last_action_date DATE         NOT NULL,
    description      TEXT,
    join_date        DATE         NOT NULL,
    is_banned        BOOLEAN      NOT NULL,
    is_deleted       BOOLEAN      NOT NULL
);

CREATE TABLE role
(
    role_id   BIGINT PRIMARY KEY,
    role_name VARCHAR(255) NOT NULL
);

CREATE TABLE release_status
(
    release_status_id BIGINT PRIMARY KEY,
    status_name       VARCHAR(255) NOT NULL
);

CREATE TABLE platform
(
    platform_id   BIGINT PRIMARY KEY,
    platform_name VARCHAR(255) NOT NULL
);

CREATE TABLE tag
(
    tag_id   BIGINT PRIMARY KEY,
    tag_name VARCHAR(255) NOT NULL,
    priority INT          NOT NULL
);

CREATE TABLE completion_status
(
    completion_status_id BIGINT PRIMARY KEY,
    completion_name      VARCHAR(255) NOT NULL
);

CREATE TABLE review_status
(
    review_status_id BIGINT PRIMARY KEY,
    status_name      VARCHAR(255) NOT NULL
);

CREATE TABLE game
(
    game_id        BIGINT PRIMARY KEY,
    title          VARCHAR(255) NOT NULL,
    developer      VARCHAR(255) NOT NULL,
    publisher      VARCHAR(255) NOT NULL,
    release_date   DATE,
    release_status BIGINT       NOT NULL,
    description    TEXT         NOT NULL,
    FOREIGN KEY (release_status) REFERENCES release_status (release_status_id)
);

CREATE TABLE user_role
(
    user_role_id BIGINT PRIMARY KEY,
    user_id      BIGINT NOT NULL,
    role_id      BIGINT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES website_user (user_id),
    FOREIGN KEY (role_id) REFERENCES role (role_id)
);

CREATE TABLE game_platform
(
    game_platform_id BIGINT PRIMARY KEY,
    platform_id      BIGINT NOT NULL,
    game_id          BIGINT NOT NULL,
    FOREIGN KEY (platform_id) REFERENCES platform (platform_id),
    FOREIGN KEY (game_id) REFERENCES game (game_id)
);

CREATE TABLE game_tag
(
    game_tag_id BIGINT PRIMARY KEY,
    game_id     BIGINT NOT NULL,
    tag_id      BIGINT NOT NULL,
    FOREIGN KEY (game_id) REFERENCES game (game_id),
    FOREIGN KEY (tag_id) REFERENCES tag (tag_id)
);

CREATE TABLE user_game
(
    user_game_id      BIGINT PRIMARY KEY,
    game_id           BIGINT  NOT NULL,
    user_id           BIGINT  NOT NULL,
    completion_status BIGINT  NOT NULL,
    is_favourite      BOOLEAN NOT NULL,
    FOREIGN KEY (game_id) REFERENCES game (game_id),
    FOREIGN KEY (user_id) REFERENCES website_user (user_id),
    FOREIGN KEY (completion_status) REFERENCES completion_status (completion_status_id)
);

CREATE TABLE user_review
(
    user_review_id BIGINT PRIMARY KEY,
    game_id        BIGINT NOT NULL,
    user_id        BIGINT NOT NULL,
    content        TEXT   NOT NULL,
    post_date      DATE   NOT NULL,
    score          INT    NOT NULL,
    FOREIGN KEY (game_id) REFERENCES game (game_id),
    FOREIGN KEY (user_id) REFERENCES website_user (user_id)
);

CREATE TABLE critic_review
(
    critic_review_id BIGINT PRIMARY KEY,
    game_id          BIGINT NOT NULL,
    user_id          BIGINT NOT NULL,
    content          TEXT   NOT NULL,
    post_date        DATE   NOT NULL,
    score            INT    NOT NULL,
    review_status    BIGINT NOT NULL,
    approved_by      BIGINT,
    FOREIGN KEY (game_id) REFERENCES game (game_id),
    FOREIGN KEY (user_id) REFERENCES website_user (user_id),
    FOREIGN KEY (review_status) REFERENCES review_status (review_status_id),
    FOREIGN KEY (approved_by) REFERENCES website_user (user_id)
);

CREATE TABLE rating
(
    rating_id      BIGINT PRIMARY KEY,
    is_positive    BOOLEAN NOT NULL,
    user_id        BIGINT  NOT NULL,
    user_review_id BIGINT  NOT NULL,
    FOREIGN KEY (user_id) REFERENCES website_user (user_id),
    FOREIGN KEY (user_review_id) REFERENCES user_review (user_review_id)
);

CREATE TABLE report
(
    report_id      BIGINT PRIMARY KEY,
    user_review_id BIGINT NOT NULL,
    user_id        BIGINT NOT NULL,
    approved       BOOLEAN,
    FOREIGN KEY (user_review_id) REFERENCES user_review (user_review_id),
    FOREIGN KEY (user_id) REFERENCES website_user (user_id)
);


--changeset Stanislaw|Przemyslaw:2 labels:init,identities
ALTER TABLE website_user ALTER COLUMN user_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE role ALTER COLUMN role_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE release_status ALTER COLUMN release_status_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE platform ALTER COLUMN platform_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE tag ALTER COLUMN tag_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE completion_status ALTER COLUMN completion_status_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE review_status ALTER COLUMN review_status_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE game ALTER COLUMN game_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE user_role ALTER COLUMN user_role_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE game_platform ALTER COLUMN game_platform_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE game_tag ALTER COLUMN game_tag_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE user_game ALTER COLUMN user_game_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE user_review ALTER COLUMN user_review_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE critic_review ALTER COLUMN critic_review_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE rating ALTER COLUMN rating_id ADD GENERATED BY DEFAULT AS IDENTITY;
ALTER TABLE report ALTER COLUMN report_id ADD GENERATED BY DEFAULT AS IDENTITY;


--changeset Stanislaw:1 labels:constraints,unique
ALTER TABLE website_user ADD CONSTRAINT unique_username UNIQUE (username);
ALTER TABLE website_user ADD CONSTRAINT unique_email UNIQUE (email);
ALTER TABLE role ADD CONSTRAINT unique_role_name UNIQUE (role_name);
ALTER TABLE release_status ADD CONSTRAINT unique_status_name UNIQUE (status_name);
ALTER TABLE platform ADD CONSTRAINT unique_platform_name UNIQUE (platform_name);
ALTER TABLE tag ADD CONSTRAINT unique_tag_name UNIQUE (tag_name);
ALTER TABLE completion_status ADD CONSTRAINT unique_completion_name UNIQUE (completion_name);
ALTER TABLE review_status ADD CONSTRAINT unique_review_status_name UNIQUE (status_name);


--changeset Stanislaw:2 labels:constraints,unique,complex
-- User's game must be unique
ALTER TABLE user_game ADD CONSTRAINT unique_user_game UNIQUE (user_id, game_id);
-- Game's tag must be unique
ALTER TABLE game_tag ADD CONSTRAINT unique_game_tag UNIQUE (game_id, tag_id);
-- Game's platform must be unique
ALTER TABLE game_platform ADD CONSTRAINT unique_game_platform UNIQUE (game_id, platform_id);
-- User's role must be unique
ALTER TABLE user_role ADD CONSTRAINT unique_user_role UNIQUE (user_id, role_id);
-- User's review of a game must be unique
ALTER TABLE user_review ADD CONSTRAINT unique_user_review UNIQUE (user_id, game_id);
-- User's rating of a review must be unique
ALTER TABLE rating ADD CONSTRAINT unique_user_rating UNIQUE (user_id, user_review_id);
-- User's report of a review must be unique
ALTER TABLE report ADD CONSTRAINT unique_user_report UNIQUE (user_id, user_review_id);


--changeset Stanislaw:3 labels:constraints,check
ALTER TABLE website_user ADD CONSTRAINT check_join_date CHECK (join_date <= CURRENT_DATE);
ALTER TABLE website_user ADD CONSTRAINT check_last_action_date CHECK (last_action_date <= CURRENT_DATE);
ALTER TABLE user_review ADD CONSTRAINT check_user_review_post_date CHECK (post_date <= CURRENT_DATE);
ALTER TABLE critic_review ADD CONSTRAINT check_critic_review_post_date CHECK (post_date <= CURRENT_DATE);

